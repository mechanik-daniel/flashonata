{
  "name": "fumifier",
  "version": "1.0.0",
  "description": "Fumifier is the core FLASH DSL engine inside FUME - It parses, compiles and executes FHIR related transformation logic expressed with FUME's specialized syntax (FLASH) and applies it to JSON data structures.",
  "module": "dist/index.js",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "publishConfig": {
    "directory": "dist"
  },
  "scripts": {
    "build": "rimraf dist && ncc build src/fumifier.js --minify --no-cache --out dist",
    "postbuild": "npm run write:dist-pkg",
    "build:types": "tsc -p tsconfig.types.json && node -e \"const fs=require('fs');const path=require('path');const root='dist';const ensureIndex=()=>{const cands=['dist/types/index.d.ts','dist/fumifier.d.ts','dist/src/fumifier.d.ts'];for(const c of cands){if(fs.existsSync(c)){const out=path.join(root,'index.d.ts');if(c!==out){fs.mkdirSync(root,{recursive:true});fs.renameSync(c,out);}return out;}}return path.join(root,'index.d.ts');};const keep=ensureIndex();function walk(dir){for(const e of fs.readdirSync(dir)){const p=path.join(dir,e);const st=fs.statSync(p);if(st.isDirectory()){walk(p);try{if(fs.readdirSync(p).length===0)fs.rmdirSync(p);}catch(_){}}else if(p.endsWith('.d.ts')&&p!==keep){fs.unlinkSync(p);}}}walk(root);\"",
    "write:dist-pkg": "node -e \"const fs=require('fs');const path=require('path');const rootPkg=JSON.parse(fs.readFileSync('package.json','utf8'));const outDir='dist';fs.mkdirSync(outDir,{recursive:true});const minimal={name:rootPkg.name,version:rootPkg.version,main:'index.js',type:'module',types:'index.d.ts',license:rootPkg.license,files:['index.js','index.d.ts'],dependencies:rootPkg.dependencies||{}};fs.writeFileSync(path.join(outDir,'package.json'),JSON.stringify(minimal,null,2));\"",
    "prepack": "npm run write:dist-pkg",
    "debug": "node --inspect-brk test/debug.js",
    "debug:detached": "node test/debug.js",
    "debug:attach": "node --inspect test/debug.js",
    "build:for-tests": "npm run lint && npm run install:fsh-package && npm run build && npm run build:types",
    "pretest": "npm run build:for-tests",
    "mocha": "c8 mocha test/**/*.test.js --timeout=15000",
    "test": "npm run mocha",
    "test:flash": "npm run build:for-tests && c8 mocha test/run-test-suite.test.js --timeout=15000 -- --flash-only",
    "test:policy": "npm run build:for-tests && c8 mocha test/verbose-policy.test.js --timeout=15000",
    "check-coverage": "c8 check-coverage --statements 100 --branches 100 --functions 100 --lines 100",
    "lint": "eslint src",
    "cover": "c8 mocha",
    "test:preprocessAst": "npm run build:for-tests && c8 mocha \"test/pre-process-ast.test.js\" --timeout=10000",
    "build:sushi": "rimraf test/fsh-test-pkg/dist && sushi -s test/fsh-test-pkg -o test/fsh-test-pkg/dist && node test/create-fsh-manifest.js && npm run install:fsh-package",
    "install:fsh-package": "rimraf test/.test-cache/fumifier.test.pkg#0.1.0 && node test/install-fsh-package.js",
    "prepublishOnly": "npm run lint && npm test && npm run build && npm run build:types"
  },
  "license": "Apache-2.0",
  "keywords": [
    "JSON",
    "query",
    "transformation",
    "convert",
    "conversion",
    "evaluate",
    "expression",
    "transform",
    "mapping",
    "path",
    "FHIR",
    "FUME",
    "hl7",
    "flash",
    "profile",
    "conformance",
    "cache",
    "structuredefinition",
    "snapshot",
    "elementdefinition",
    "type",
    "structure",
    "element",
    "fsh",
    "path",
    "fumify"
  ],
  "files": [
    "dist",
    "README.md",
    "LICENSE"
  ],
  "devDependencies": {
    "@outburn/structure-navigator": "^1.4.5",
    "@vercel/ncc": "^0.38.3",
    "c8": "^10.1.3",
    "chai": "^4.5.0",
    "chai-as-promised": "^7.1.2",
    "eslint": "8.0.0",
    "eslint-plugin-ideal": "^0.1.3",
    "eslint-plugin-promise": "^6.6.0",
    "fhir-snapshot-generator": "^1.4.2",
    "fsh-sushi": "^3.16.3",
    "mocha": "^11.7.1",
    "mocha-lcov-reporter": "^1.3.0",
    "node-fetch": "^3.3.2",
    "rimraf": "^6.0.1",
    "typescript": "^5.5.4"
  },
  "engines": {
    "node": ">= 20"
  }
}
